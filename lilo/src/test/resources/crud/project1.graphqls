enum Role {
    GUEST
    USER
    ADMIN
}

interface UserBase {
    name: String!
    age: Int!
    enabled: Boolean!
    role: Role!
}

type User implements UserBase {
    id: Int!
    name: String!
    age: Int!
    enabled: Boolean!
    role: Role!
}

type WebUser implements UserBase {
    id: Int!
    username: String
    name: String!
    age: Int!
    enabled: Boolean!
    role: Role!
}

union SystemUser = User | WebUser

input UserForm {
    name: String!
    age: Int!
    enabled: Boolean!
    role: Role!
}

type Queries {
    get(id: Int!): SystemUser!
}

type Mutations {
    create(user: UserForm!): SystemUser!
}

schema {
    query: Queries
    mutation: Mutations
}
